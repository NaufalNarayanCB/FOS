// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  MANAGER
  CASHIER
}

enum Category {
  FOOD
  DRINK
  SNACK
}

enum Payment {
  CASH
  QRIS
}

enum Status {
  NEW
  PAID
  DONE
}

model User {
  id              Int      @id @default(autoincrement())
  uuid            String   @default("")
  name            String   @default("")
  email           String   @unique @default("")
  password        String   @default("")
  profile_picture String   @default("")
  role            Role     @default(CASHIER)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  orderDetail     Order[]
}

model Menu {
  id          Int         @id @default(autoincrement())
  uuid        String      @default("")
  name        String      @default("")
  price       Int         @default(0)
  category    Category    @default(FOOD)
  picture     String      @default("")
  description String      @default("")
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  orderList   OrderList[]
}

model Order {
  id             Int         @id @default(autoincrement())
  uuid           String      @default("")
  customer       String      @default("")
  table_number   Int         @default(0)
  total_price    Int         @default(0)
  payment_method Payment     @default(CASH)
  idUser         Int
  status         Status      @default(NEW)
  User           User?       @relation(fields: [UserID], references: [id])
  createdAt      DateTime    @default(now())
  updateAt       DateTime    @default(now()) @updatedAt
  UserID         Int?
  OrderList      OrderList[]
}

model OrderList {
  id        Int      @id @default(autoincrement())
  uuid      String   @default("")
  quantity  Int      @default(0)
  note      String   @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  menuID    Int?
  menu      Menu?    @relation(fields: [menuID], references: [id])
  OrderID   Int?
  Order     Order?   @relation(fields: [OrderID], references: [id])
}
